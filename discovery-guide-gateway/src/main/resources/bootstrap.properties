# Spring cloud config
spring.application.name=discovery-guide-gateway
server.port=5001

# Nacos config for discovery
spring.cloud.nacos.discovery.server-addr=localhost:8848

# Nacos config for rule
spring.cloud.nacos.config.server-addr=localhost:8848

# Spring cloud discovery metadata config
spring.cloud.discovery.metadata.group=discovery-guide-group

# Nepxion discovery config
spring.application.strategy.gateway.header.priority=false
spring.application.strategy.gateway.dynamic.route.enabled=true

# Spring cloud gateway config
spring.cloud.discovery.reactive.enabled=false
spring.cloud.gateway.routes[0].id=route0
spring.cloud.gateway.routes[0].predicates[0]=Path=/discovery-guide-service-a/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].uri=lb://discovery-guide-service-a
# 启动和关闭监控，一旦关闭，调用链和日志输出都将关闭。缺失则默认为false
spring.application.strategy.monitor.enabled=true
# 启动和关闭Header传递的Debug日志打印，注意：每调用一次都会打印一次，会对性能有所影响，建议压测环境和生产环境关闭。缺失则默认为false
# 启动和关闭Debug日志打印，注意：每调用一次都会打印一次，会对性能有所影响，建议压测环境和生产环境关闭。缺失则默认为false
spring.application.strategy.logger.debug.enabled=true


spring.application.strategy.rest.intercept.debug.enabled=true
# 路由策略的时候，对REST方式调用拦截的时候（支持Feign、RestTemplate或者WebClient调用），希望把来自外部自定义的Header参数（用于框架内置上下文Header，例如：trace-id, span-id等）传递到服务里，那么配置如下值。如果多个用“;”分隔，不允许出现空格
spring.application.strategy.context.request.headers=trace-id;span-id
# 路由策略的时候，对REST方式调用拦截的时候（支持Feign、RestTemplate或者WebClient调用），希望把来自外部自定义的Header参数（用于业务系统自定义Header，例如：mobile）传递到服务里，那么配置如下值。如果多个用“;”分隔，不允许出现空格
spring.application.strategy.business.request.headers=a

# 精简教程，请访问
# https://github.com/Nepxion/Discovery/wiki
# https://gitee.com/nepxion/Discovery/wikis
# 详细教程，请访问
# http://nepxion.com/discovery/
